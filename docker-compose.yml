version: '3.8'
services:
  # traefik:
  #   image: "traefik:v2.9"
  #   container_name: "traefik"
  #   command:
  #     - "--log.level=DEBUG"
  #     - "--providers.docker=true"
  #     - "--providers.docker.exposedbydefault=false"
  #     - "--entrypoints.websecure.address=:443"
  #   ports:
  #     - 443:443
  #   networks:
  #     console:
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock:ro

  console:
    build: console
    environment:
      - SRV_KEY=secret
      - WG_HOST=wg
      - WG_USER=alpha
      - WG_PASSWORD=this-unusual-password
      - DB_USER=gorm
      - DB_PASSWORD=gorm
      - DB_HOST=database
    volumes:
      - ./console/commands.yml:/app/commands.yml
      - ./console/config.yml:/app/config.yml
    ports:
      - 80:8080
    networks:
      console:
    depends_on:
      database:
        condition: service_healthy
    # labels:
    #   - "traefik.enable=true"
    #   - "traefik.http.routers.console.rule=Path(`/`)"
    #   - "traefik.http.routers.console.entrypoints=websecure"
    #   - "traefik.http.services.console.loadbalancer.server.port=80"
  
  database:
    container_name: database
    image: postgres:15
    restart: always
    environment:
      - POSTGRES_USER=gorm
      - POSTGRES_PASSWORD=gorm
      - POSTGRES_DB=console
    ports:
      - 5432:5432
    networks:
      console:
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U gorm"]
      interval: 5s
      timeout: 5s
      retries: 5
    

  vpn-api:
    build: wg-api
    network_mode: service:wg
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    environment:
      - SRV_KEY=secret
    volumes:
      - ./db:/app/db
      - ./docker-compose.test.yml:/templates/docker-compose.yml
      - ./machines:/opt/machines
      - /var/run/docker.sock:/var/run/docker.sock
      - wireguard:/etc/wireguard:rw


  wg:
    image: ngoduykhanh/wireguard-ui:latest
    command: disable-login
    cap_add:
      - NET_ADMIN
    environment:
      - SENDGRID_API_KEY
      - EMAIL_FROM_ADDRESS
      - EMAIL_FROM_NAME
      - SESSION_SECRET
      - DISABLE_LOGIN=true
      - WGUI_FORWARD_MARK=
      - WGUI_ENDPOINT_ADDRESS=192.168.0.227
      - WGUI_SERVER_INTERFACE_ADDRESSES=10.100.0.2/24
      # - WGUI_USERNAME=alpha
      # - WGUI_PASSWORD=this-unusual-password
      - WG_CONF_TEMPLATE
      - WGUI_SERVER_POST_UP_SCRIPT=iptables -A FORWARD -i wg0 -j ACCEPT; iptables -t nat -A POSTROUTING -o eth1 -j MASQUERADE
      - WGUI_SERVER_POST_DOWN_SCRIPT=iptables -D FORWARD -i wg0 -j ACCEPT; iptables -t nat -D POSTROUTING -o eth1 -j MASQUERADE
      - WGUI_MANAGE_START=true
      - WGUI_MANAGE_RESTART=true
    logging:
      driver: json-file
      options:
        max-size: 50m
    volumes:
      - ./db:/app/db
      - wireguard:/etc/wireguard
      - /lib/config:/config
    ports:
      - 5000:5000
      - 51820:51820/udp
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
      - net.ipv4.ip_forward=1
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.wg.rule=Host(`wg.${DOMAIN}`)"
      - "traefik.http.routers.wg.entrypoints=websecure"
      - "traefik.http.services.wg.loadbalancer.server.port=5000"
    networks:
      console:
      net:
        ipv4_address: 10.10.254.254
    

volumes:
  wireguard:

networks:
  console:
  net:
    name: net
    external: true